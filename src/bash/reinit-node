#!/bin/bash

source $(dirname $BASH_SOURCE)/common
set -euo pipefail

workspace_dir=$1 && shift
template_dir=$1 && shift
vpn_type=$1 && shift
cloud=$1 && shift

function command_usage() {
  echo -e "${NC}\nUSAGE: vs reinit-node $vpn_type $cloud [-r|--region <REGION>] [-d|--debug]\n${LIGHT_BLUE}"
  echo -e "  This CLI command reinitializes the remote state of a VPN node in the given"
  echo -e "  region. The state is refreshed and an outline of the remote resources created" 
  echo -e "  or to be created will be shown.\n${LIGHT_GREEN}"
  echo -e "  ${BOLD}-r|--region${NORMAL} <REGION>  The region where the node is deployed"
  echo -e "  ${DIM}-d|--debug${NORMAL}            Enable trace output${NC}"
}

region=""

if [[ $# -eq 0 ]]; then
  command_usage
  exit 1
fi
while [[ $# -gt 0 ]]; do
  case "$1" in
    -r|--region)
      region=$2
      shift
      ;;
    -d|--debug)
      set -x
      ;;
    -h|--help)
      command_usage
      exit 0
      ;;
    *)
      echo -e "${RED}\nERROR! Unknown option \"$1\".${NC}"
      command_usage
      exit 1
      ;;
  esac
  shift
done

if [[ -z $region ]]; then
  echo -e "${RED}\nERROR! Please provide a cloud region from the following list.${NC}"
  $(dirname $BASH_SOURCE)/show-regions $cloud
  exit 1
fi

if [[ -e ${workspace_dir}/${region} ]]; then
  pushd ${workspace_dir}/${region} >/dev/null 2>&1
  terraform::set_cloud_region "$vpn_type" "$cloud" "$region"
  terraform::init "$vpn_type" "$cloud" "$region" "$template_dir"
  terraform::plan "$vpn_type" "$cloud" "$region" "$template_dir"
  popd >/dev/null 2>&1
else
  echo -e "${RED}\nERROR! Deployment workspace path does not exist. The region"
  echo -e "       provided may be invalid or the server may not have been deployed.${NC}"
fi
