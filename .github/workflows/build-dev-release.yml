name: MyCS appbricks/vpn-server:dev CLI image
concurrency: dev

on:
  workflow_dispatch:
  push:
    branches: [ dev ]
    paths:
    - 'bin/**'
    - 'cloud/**'
    - 'src/**'
    - 'Dockerfile'

jobs:
  build-cookbook-utils:
    strategy:
      matrix:
        os: [ linux, darwin, windows ]
        arch: [ amd64, arm64 ]
        exclude:
          - os: windows
            arch: arm64

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.20'

    - name: Run build
      run: |
        src/build/build-utils.sh :release:clean-all: ${{ matrix.os }} ${{ matrix.arch }}

  build-and-publish:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Retrieve latest appbricks cloud image name
      id: get_cloud_image
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
      run: |
        CLOUD_IMAGE_NAME=$(./src/build/get-cloud-image.sh)
        echo "name=${CLOUD_IMAGE_NAME}" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        build-args: |
          AB_CLOUD_IMAGE=${{ steps.get_cloud_image.outputs.name }}
        push: true
        platforms: linux/amd64,linux/arm64
        tags: appbricks/vpn-server:dev
