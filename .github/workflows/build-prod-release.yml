name: MyCS SpaceNode Cookbook and SDK (appbricks/spacenode-cookbook:latest) CLI
concurrency: prod

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
    - 'bin/**'
    - 'cloud/**'
    - 'src/**'
    - 'Dockerfile'

jobs:
  create-release-tag:
    runs-on: ubuntu-latest
    outputs: 
      version: ${{steps.release-tag.outputs.version}}

    defaults:
      run:
        shell: bash
    
    env:
      VERSION: '0.0'
    
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    # Create and tag release
    - name: Create release tag
      id: release-tag
      run: |
        git config user.email "$(git log -1 --pretty=format:'%an')"
        git config user.name "$(git log -1 --pretty=format:'%ae')"
        git fetch --tags origin

        set +e
        last_tag=$(git for-each-ref \
          --sort=-creatordate \
          --format '%(refname)' refs/tags \
          | grep "refs/tags/${VERSION}" \
          | head -1)
        set -e

        build_number=$(basename "$last_tag" | cut -d '.' -f3)
        [[ -n $build_number ]] || build_number=-1
        release_tag=${VERSION}.$((build_number+1))
        last_commit_msg=$(git log -1 --pretty=%B)

        echo "Creating release tag ${release_tag}..."
        git tag -a ${release_tag} -m "$last_commit_msg"
        git push --follow-tags

        echo "version=${release_tag}" >> $GITHUB_OUTPUT

  build-cookbook-utils:
    strategy:
      matrix:
        os: [ linux, darwin, windows ]
        arch: [ amd64, arm64 ]
        exclude:
          - os: windows
            arch: arm64

    needs: create-release-tag
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      VERSION: ${{ needs.create-release-tag.outputs.version }}
      ENV: prod

    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ needs.create-release-tag.outputs.version }}

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.20'

    - name: Run build
      run: |
        src/build/build-utils.sh :release:clean-all: ${{ matrix.os }} ${{ matrix.arch }}

    - name: Publish release archives to s3
      run: |
        mkdir releases
        cp -r .build/releases/*.zip releases/
        for f in $(ls releases/); do
          aws s3 cp \
            releases/$f \
            "s3://mycs${ENV}-deploy-artifacts/releases/${f%%_*}-${VERSION}_${f#*_}.zip" \
            --acl public-read
        done

    - name: Upload built binaries for publishing
      uses: actions/upload-artifact@master
      with:
        name: cookbook-utils-artifacts-${{ matrix.os }}-${{ matrix.arch }}
        path: ${{ github.workspace }}/go/src/github.com/appbricks/cloud-builder-cli/.build/releases/*.zip

  build-and-publish-image:
    needs: 
    - create-release-tag
    - build-cookbook-utils
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ needs.create-release-tag.outputs.version }}

    - name: Retrieve latest appbricks cloud image name
      id: get_cloud_image
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
      run: |
        CLOUD_IMAGE_NAME=$(./src/build/get-cloud-image.sh prod)
        echo "name=${CLOUD_IMAGE_NAME}" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        build-args: |
          env=prod
          version=${{ needs.create-release-tag.outputs.version }}
          ab_cloud_image=${{ steps.get_cloud_image.outputs.name }}
        push: true
        platforms: linux/amd64,linux/arm64
        tags: appbricks/spacenode-cookbook:latest,appbricks/spacenode-cookbook:${{ needs.create-release-tag.outputs.version }}

  publish-release-tag:
    needs: 
    - build-and-publish-image
    - create-release-tag
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
    
    env:
      VERSION: ${{ needs.create-release-tag.outputs.version }}

    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ needs.create-release-tag.outputs.version }}

    # Retrieve build results from previous job
    - name: Download built binaries for release linux/amd64
      uses: actions/download-artifact@master
      with:
        name: cookbook-utils-artifacts-linux-amd64
        path: .build/releases
    - name: Download built binaries for release linux/arm64
      uses: actions/download-artifact@master
      with:
        name: cookbook-utils-artifacts-linux-arm64
        path: .build/releases
    - name: Download built binaries for release darwin/amd64
      uses: actions/download-artifact@master
      with:
        name: cookbook-utils-artifacts-darwin-amd64
        path: .build/releases
    - name: Download built binaries for release darwin/arm64
      uses: actions/download-artifact@master
      with:
        name: cookbook-utils-artifacts-darwin-arm64
        path: .build/releases
    - name: Download built binaries for release windows/amd64
      uses: actions/download-artifact@master
      with:
        name: cookbook-utils-artifacts-windows-amd64
        path: .build/releases

    - name: Create release files
      id: release-tag
      run: |
        sed -i "s|<VERSION>|${VERSION}|g" doc/release-notes.md
        sed -i "s|<VERSION>|${VERSION}|g" src/install/install.sh

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.create-release-tag.outputs.version }}
        prerelease: false
        body_path: doc/release-notes.md
        files: |
          .build/releases/mycs-cookbook-utils_linux_amd64.zip
          .build/releases/mycs-cookbook-utils_linux_arm64.zip
          .build/releases/mycs-cookbook-utils_darwin_amd64.zip
          .build/releases/mycs-cookbook-utils_darwin_arm64.zip
          .build/releases/mycs-cookbook-utils_windows_amd64.zip
          src/install/install.sh
          LICENSE
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: appbricks/spacenode-cookbook

    - name: Trigger Cloud-Builder CLI build
      uses: benc-uk/workflow-dispatch@v1
      with:
        repo: appbricks/cloud-builder-cli
        ref: dev
        workflow: Build prod Cloud Builder CLI release
        inputs: '{ "cookbook_version": "${{ needs.create-release-tag.outputs.version }}" }'
        token: ${{ secrets.GH_TOKEN }}
